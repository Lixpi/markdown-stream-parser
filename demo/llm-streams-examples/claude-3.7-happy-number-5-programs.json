[
    "#",
    " Finding Happy Numbers in",
    " Exotic Languages\n\nLet",
    " me create programs in 5 exotic",
    " programming languages to determine",
    " if a number is happy",
    ". A happy number is one",
    " where the sum of squares",
    " of its digits eventually leads to ",
    "1.\n\n####",
    " 1. Bra",
    "infuck\n\nBrainfuck is an",
    " esoteric language with",
    " only 8 commands",
    ":\n\n```bra",
    "infuck\n++++++",
    "++++++++++++++++++++++++",
    "+++++++++++++++",
    "++++++",
    "\n>,[>++++",
    "[<-------->",
    "-]<--",
    "[>+>+<<-]>",
    ">[<<+>>-]",
    "<++<,",
    "]\n>[",
    "\n  >+++++++",
    "+++<[->-",
    "[>+>>",
    "]>[+[-<+>]",
    ">+>>",
    "]<<<<<]",
    "\n  >[<+>-]",
    "\n  >[-]\n  >+",
    "\n  >[<<",
    "<+>>>-]",
    "\n  <[<<<+>>>-]",
    "\n  <<+\n  <[",
    "\n    >[>",
    "+<-]",
    "<[>+<-",
    "]>>[<",
    "<+>>-]",
    "<-\n  ]\n  ",
    "<-[",
    "\n    >>+<",
    "<-[>>+<",
    "<-[>>+<<-[>>",
    "+<<-[>>",
    "+<<-[>>",
    "+<<-\n    [>>+<",
    "<-[>>+<",
    "<-[>>+<",
    "<-[>>+<",
    "<-[>>+<",
    "<-]]]]]]]]]",
    "\n  ]\n  >>",
    "\n]",
    "\n<[.[-",
    "]<]",
    "\n```\n\n#### ",
    "2. AP",
    "L (A",
    " Programming Language)\n\nAP",
    "L is known for its unique",
    " symbols and conc",
    "ise notation:\n\n```",
    "apl\nH",
    "appyNumber",
    "←{\n  cycle",
    "←⍬",
    "\n  num←⍵",
    "\n  {\n    →",
    "(num=",
    "1)",
    "⍴'happy'\n    →(",
    "num∊",
    "cycle)⍴",
    "'unhappy'",
    "\n    cycle,←",
    "num\n    num←",
    "+/⍵*",
    "2\n    ",
    "∇num",
    "\n  }(",
    "10|⍵),",
    "⌊",
    "⍵÷10",
    "\n}\n```\n\n####",
    " 3. Bef",
    "unge\n\nBefunge",
    " is a two-dimensional language where program",
    " execution can go",
    " in any cardinal direction:\n\n```bef",
    "unge\n&",
    ">:1-",
    ":v v",
    " *_$.",
    "@ \n ",
    "^    _",
    "$>\\:",
    "^\n v",
    " :::",
    "< \n >",
    "  ^ ,: \n |",
    ":<\n>",
    "$0>",
    ":vv          ",
    "v\n    ",
    "^,_@",
    "#:+",
    "*55**.:",
    "<\nvv  ",
    "_            v",
    "\n>*",
    ":+*55",
    "**^  ",
    ">0$",
    "  v\nv",
    "   _  ",
    "^         <\n>",
    ":55+",
    "/v",
    "\n   v:",
    "<\n   >",
    "   ^ \n   >",
    ":55+%",
    "v\n      v:",
    "<\n      >$",
    "   ^\n      >",
    " :|  \n        ",
    "@\n```\n\n#### ",
    "4.",
    " LOLCODE",
    "\n\nLOLCODE is",
    " designed to resemble l",
    "olcat memes:\n\n```l",
    "olcode\nHAI",
    " 1.3",
    "\n    CAN HAS STDIO",
    "?\n    ",
    "\n    HO",
    "W IZ I",
    " SQUARE Y",
    "R num",
    "\n        VISIBLE",
    " SUM OF PRODU",
    "KT OF num AN",
    " num\n    IF",
    " U SAY SO\n    ",
    "\n    HOW IZ I",
    " HAPPYNUMB",
    "R YR num\n        I",
    " HAS A seen",
    " ITZ A BUK",
    "KIT\n        I HAS A current",
    " ITZ num\n        ",
    "\n        IM",
    " IN YR loop",
    " UPPIN Y",
    "R i T",
    "IL",
    " BOTH SAEM",
    " current AN ",
    "1\n            ",
    "BOTH SAEM current AN",
    " 1, O",
    " RLY?\n                ",
    "YA RLY",
    "\n                    FOUND",
    " YR \"HAPPY NUMBER!\"",
    "\n                NO WAI\n                    ",
    "seen HAS A S",
    "RS current ITZ \"",
    "SEEN\"\n                    I",
    " HAS A sum",
    " ITZ 0",
    "\n                    I HAS",
    " A digit\n                    I HAS",
    " A temp ITZ current\n                ",
    "    \n                    ",
    "IM IN YR digit",
    "loop\n                        ",
    "BOTH SAEM temp",
    " AN 0, O",
    " RLY?",
    "\n                            YA R",
    "LY\n                                ",
    "GTFO\n                        ",
    "OIC\n                        ",
    "\n                        digit",
    " R MOD OF",
    " temp AN 10",
    "\n                        sum R",
    " SUM OF sum",
    " AN PRODUKT OF digit AN",
    " digit\n                        temp R",
    " QUOSHUNT OF temp AN",
    " 10\n                    ",
    "IM",
    " OUTTA YR digit",
    "loop\n                    ",
    "\n                    current",
    " R sum\n                    \n                ",
    "    seen HAS A SRS",
    " current, O RLY?",
    "\n                        YA",
    " RLY\n                ",
    "            FOUND YR",
    " \"NOT HAPPY NUMBER",
    "!\"\n                    ",
    "OIC\n            ",
    "OIC\n        ",
    "IM OUTTA Y",
    "R loop\n    IF",
    " U SAY SO",
    "\n    \n    VISIBLE \"",
    "ENTER",
    " NUMBR: \"\n    ",
    "I HAS A input",
    "\n    G",
    "IMMEH input",
    "\n    input IS",
    " NOW A NUMBR\n    ",
    "\n    VISIBLE I",
    " IZ HAPPYNUMBR Y",
    "R input",
    " MKAY",
    "\nKTHXBYE",
    "\n```\n\n#### ",
    "5. Whitespace",
    "\n\nWhitespace only",
    " uses spaces,",
    " tabs, and line",
    " feeds as",
    " syntax:\n\n```whitespace",
    "\n   \t",
    "  \t   ",
    "\n ",
    "\n   \t",
    " \t    ",
    "\n \n   ",
    "\t\t  \t  ",
    "\n \n   \t\t",
    " \t\t  \n \n   ",
    "\t\t\t \t\t\t",
    "\n \n   \t     ",
    "\n \n   \t ",
    "\t\t  \n \n   \t ",
    "\t\t\t \n \n   \t\t",
    "    \n \n   \t\t",
    "   \t\n \n   \t\t",
    "  \t \n ",
    "\n   \t\t  ",
    "\t\t\n \n   \t\t ",
    "\t  \n ",
    "\n \n\n \n   ",
    "\t\n\t",
    "\n     \t",
    "\n\t\t",
    "  \t ",
    "\t",
    "\n\t\t    \t\n\t\t",
    "   \t\t\n\t\t  \t\t",
    " \n\t\t  ",
    "\t  \n\t\t  ",
    "\t\t\t\n\t\t \t",
    "   \n\t\t ",
    "\t  \t\n\t\t ",
    "\t \t ",
    "\n\t\n ",
    "\n\n     \t\t\t  \t\t ",
    "\t \t  ",
    "\t \t\t \t\t\t",
    " \t\t  \t  ",
    "\t\t \t \t ",
    "\t\t\t \t\t\t \t\t \t\t\t\t",
    " \t\t \t",
    "   \t\t  ",
    "\t  \t\t  ",
    "\t \t",
    "\n \n```",
    "\n\nNote:",
    " Whitespace is literally",
    " based on spaces",
    ", tabs, and line feeds",
    ", so what appears",
    " to be empty space",
    " above is actually meaningful code",
    ". It's difficult to represent accurately",
    " in most text editors",
    ".\n\n#### How Happy",
    " Numbers Work\n\nA number",
    " is happy when the process",
    " of repeatedly summing the squares of its",
    " digits eventually leads to ",
    "1. For example:",
    "\n\n- Start with 19",
    "\n- 1² + 9",
    "² = 1 ",
    "+ 81 =",
    " 82\n- ",
    "8² + 2",
    "² = 64 ",
    "+ 4 =",
    " 68\n- ",
    "6² + 8",
    "² = 36 ",
    "+ 64 =",
    " 100\n- ",
    "1² + 0",
    "² + 0²",
    " = 1 +",
    " 0 + ",
    "0 = 1",
    "\n\nSince we",
    " reached 1, 19",
    " is a happy number",
    ".\n\nEach",
    " of these programs implements",
    " this algorithm in their",
    " own unique syntax an",
    "d paradigm."
]