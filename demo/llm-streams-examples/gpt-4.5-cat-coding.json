[
    "####",
    " üêæ",
    " **",
    "Regex",
    " Lesson",
    ":",
    " Evalu",
    "ating",
    " Cat",
    " Bre",
    "eds",
    "**\n\n",
    "Regex",
    ",",
    " or",
    " **",
    "regular",
    " expressions",
    "**,",
    " are",
    " a",
    " powerful",
    " textual",
    " tool",
    " often",
    " used",
    " in",
    " programming",
    " for",
    " finding",
    " specific",
    " patterns",
    " within",
    " strings",
    ".",
    " While",
    " regex",
    " isn't",
    " intended",
    " for",
    " evaluating",
    " animal",
    " breeds",
    " by",
    " itself",
    " (",
    "breed",
    " evaluation",
    " genuinely",
    " requires",
    " more",
    " complex",
    " logic",
    " or",
    " even",
    " ML",
    " models",
    "),",
    " regex",
    " is",
    " perfect",
    " for",
    " parsing",
    " text",
    " data",
    " input",
    " by",
    " users",
    " or",
    " from",
    " external",
    " data",
    " sources",
    " to",
    " identify",
    ",",
    " sort",
    ",",
    " or",
    " validate",
    " breed",
    " names",
    " from",
    " a",
    " list",
    ".\n\n",
    "In",
    " this",
    " lesson",
    ",",
    " we",
    "‚Äôll",
    " explore",
    " using",
    " regex",
    " search",
    " patterns",
    " with",
    " Python",
    " (`",
    "re",
    "`",
    " module",
    ")",
    " to",
    " recognize",
    " and",
    " categorize",
    " common",
    " cat",
    " breeds",
    ".\n\n",
    "####",
    " üß∂",
    " **",
    "Step",
    "-by",
    "-Step",
    " Example",
    ":",
    "**\n\n",
    "Supp",
    "ose",
    " we",
    " have",
    " an",
    " input",
    " text",
    " where",
    " users",
    " may",
    " mention",
    " cat",
    " breeds",
    ".\n\n",
    "We'll",
    " use",
    " Python",
    "'s",
    " built",
    "-in",
    " `",
    "re",
    "`",
    " module",
    ":\n\n",
    "```",
    "python",
    "\n",
    "import",
    " re",
    "\n\n",
    "#",
    " Define",
    " some",
    " cat",
    " breeds",
    " as",
    " examples",
    "\n",
    "cat",
    "_b",
    "re",
    "eds",
    " =",
    " [\n",
    " ",
    " '",
    "S",
    "iam",
    "ese",
    "',",
    " '",
    "Pers",
    "ian",
    "',",
    " '",
    "M",
    "aine",
    " C",
    "oon",
    "',",
    " \n",
    " ",
    " '",
    "B",
    "eng",
    "al",
    "',",
    " '",
    "S",
    "ph",
    "yn",
    "x",
    "',",
    " '",
    "British",
    " Sh",
    "orth",
    "air",
    "',\n",
    " ",
    " '",
    "R",
    "agd",
    "oll",
    "',",
    " '",
    "A",
    "by",
    "ss",
    "inian",
    "'\n",
    "]\n\n",
    "#",
    " Generate",
    " a",
    " regex",
    " pattern",
    " to",
    " match",
    " any",
    " breed",
    " name",
    " (",
    "case",
    "-ins",
    "ensitive",
    ")\n",
    "breed",
    "_pattern",
    " =",
    " re",
    ".compile",
    "(r",
    "f",
    "\"\\",
    "b",
    "({'",
    "|",
    "'.",
    "join",
    "(cat",
    "_b",
    "re",
    "eds",
    ")",
    "})",
    "\\",
    "b",
    "\",",
    " flags",
    "=re",
    ".",
    "IGNORE",
    "CASE",
    ")\n\n",
    "#",
    " Function",
    " to",
    " search",
    " breeds",
    " from",
    " input",
    " text",
    "\n",
    "def",
    " find",
    "_cat",
    "_b",
    "re",
    "eds",
    "(text",
    "):\n",
    "   ",
    " matches",
    " =",
    " breed",
    "_pattern",
    ".findall",
    "(text",
    ")\n",
    "   ",
    " #",
    " Return",
    " a",
    " set",
    " of",
    " unique",
    " breed",
    " names",
    " matched",
    " (",
    "title",
    "-c",
    "ased",
    " for",
    " consistency",
    ")\n",
    "   ",
    " return",
    " {",
    "breed",
    ".title",
    "()",
    " for",
    " breed",
    " in",
    " matches",
    "}\n\n",
    "#",
    " Example",
    " usage",
    "\n",
    "example",
    "_text",
    " =",
    " \"",
    "I",
    " love",
    " siam",
    "ese",
    " and",
    " Bengal",
    " cats",
    ",",
    " but",
    " my",
    " friend",
    " prefers",
    " ma",
    "ine",
    " co",
    "on",
    ".\"\n",
    "matched",
    "_b",
    "re",
    "eds",
    " =",
    " find",
    "_cat",
    "_b",
    "re",
    "eds",
    "(example",
    "_text",
    ")\n\n",
    "print",
    "(m",
    "atched",
    "_b",
    "re",
    "eds",
    ")\n",
    "``",
    "`\n\n",
    "####",
    " üìå",
    " **",
    "Output",
    " Explanation",
    ":",
    "**\n\n",
    "The",
    " output",
    " will",
    " be",
    " a",
    " set",
    " of",
    " unique",
    " identified",
    " breeds",
    ":\n\n",
    "``",
    "`\n",
    "{'",
    "S",
    "iam",
    "ese",
    "',",
    " '",
    "B",
    "eng",
    "al",
    "',",
    " '",
    "M",
    "aine",
    " C",
    "oon",
    "'}\n",
    "``",
    "`\n\n",
    "####",
    " üéà",
    " **",
    "Regex",
    " Pattern",
    " Explained",
    ":",
    "**\n\n",
    "-",
    " `",
    "\\",
    "b",
    "`:",
    " A",
    " word",
    " boundary",
    " marker",
    " (",
    "ens",
    "ures",
    " entire",
    " breed",
    " name",
    " matches",
    " instead",
    " of",
    " partial",
    " matches",
    ").\n",
    "-",
    " `",
    "({'",
    "|",
    "'.",
    "join",
    "(cat",
    "_b",
    "re",
    "eds",
    ")",
    "})",
    "`:",
    " Dynamic",
    " insertion",
    " of",
    " cat",
    " breeds",
    " joined",
    " by",
    " `",
    "|",
    "`",
    " (",
    "pipe",
    ")",
    " as",
    " an",
    " OR",
    " operator",
    ",",
    " meaning",
    " it",
    " will",
    " match",
    " any",
    " one",
    " of",
    " these",
    " breeds",
    ".\n",
    "-",
    " `",
    "flags",
    "=re",
    ".",
    "IGNORE",
    "CASE",
    "`:",
    " Match",
    " regardless",
    " of",
    " uppercase",
    "/l",
    "ower",
    "case",
    " spelling",
    ".\n\n",
    "####",
    " üîç",
    " **",
    "Common",
    " regex",
    " patterns",
    " useful",
    " for",
    " text",
    " search",
    ":",
    "**\n\n",
    "|",
    " Pattern",
    " ",
    " |",
    " Description",
    "            ",
    " |\n",
    "|",
    "----------",
    "|",
    "----------------",
    "---------",
    "|\n",
    "|",
    " `",
    "\\",
    "b",
    "word",
    "\\b",
    "`",
    " |",
    " Matches",
    " whole",
    " words",
    " only",
    "              ",
    " |\n",
    "|",
    " `",
    ".*",
    "`",
    "    ",
    " |",
    " Matches",
    " anything",
    ",",
    " zero",
    " or",
    " more",
    " times",
    " |\n",
    "|",
    " `",
    "\\",
    "d",
    "`",
    "    ",
    " |",
    " Matches",
    " digits",
    " (",
    "numbers",
    " ",
    "0",
    "-",
    "9",
    ")",
    " |\n",
    "|",
    " `[",
    "A",
    "-Za",
    "-z",
    "]",
    "`",
    " |",
    " Matches",
    " any",
    " single",
    " alphabetical",
    " character",
    " |\n\n",
    "####",
    " üìñ",
    " **",
    "When",
    " regex",
    " may",
    " not",
    " be",
    " sufficient",
    ":",
    "**\n\n",
    "Regex",
    " alone",
    " works",
    " purely",
    " with",
    " text",
    " patterns",
    ".",
    " Recogn",
    "izing",
    " and",
    " categor",
    "izing",
    " breeds",
    " from",
    " a",
    " random",
    " description",
    " or",
    " evaluating",
    " breeds",
    " from",
    " user",
    " descriptions",
    " with",
    " ty",
    "pos",
    ",",
    " ambiguous",
    " language",
    ",",
    " synonyms",
    ",",
    " or",
    " collo",
    "quial",
    " names",
    " usually",
    " requires",
    " various",
    " NLP",
    " approaches",
    " or",
    " machine",
    " learning",
    " classification",
    " techniques",
    ".\n\n",
    "####",
    " üôå",
    " **",
    "Challenge",
    " yourself",
    " next",
    ":",
    "**\n\n",
    "1",
    ".",
    " Adapt",
    " the",
    " breed",
    " list",
    " to",
    " read",
    " from",
    " a",
    " file",
    ".\n",
    "2",
    ".",
    " Extend",
    " regex",
    " to",
    " consider",
    " some",
    " common",
    " ty",
    "pos",
    " (",
    "e",
    ".g",
    ".,",
    " \"",
    "Main",
    "coon",
    "\",",
    " \"",
    "Si",
    "ame",
    "es",
    "\").\n",
    "3",
    ".",
    " Combine",
    " regex",
    " matching",
    " with",
    " Python",
    " data",
    " structures",
    " for",
    " efficient",
    " lookup",
    ".\n\n",
    "**",
    "Feel",
    " free",
    " to",
    " ask",
    " if",
    " you'd",
    " like",
    " to",
    " explore",
    " further",
    "!",
    "**",
    " üê±",
    "‚ú®"
]