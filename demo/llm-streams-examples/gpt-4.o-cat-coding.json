[
    "Of",
    " course",
    ".",
    " Let's",
    " walk",
    " through",
    " how",
    " you",
    " can",
    " use",
    " **",
    "Regular",
    " Expressions",
    " (",
    "Regex",
    ")**",
    " to",
    " evaluate",
    " or",
    " identify",
    " cat",
    " breeds",
    " from",
    " text",
    ".",
    " This",
    " will",
    " be",
    " a",
    " beginner",
    "-friendly",
    " lesson",
    " with",
    " practical",
    " examples",
    ".\n\n",
    "---\n\n",
    "####",
    " üß†",
    " *",
    "What",
    " is",
    " Regex",
    "?",
    "*\n\n",
    "Regex",
    " is",
    " a",
    " powerful",
    " pattern",
    "-m",
    "atching",
    " tool",
    " used",
    " to",
    " search",
    ",",
    " extract",
    ",",
    " or",
    " validate",
    " information",
    " in",
    " text",
    ".",
    " For",
    " example",
    ",",
    " it",
    " can",
    " help",
    " you",
    " find",
    " all",
    " mentions",
    " of",
    " specific",
    " cat",
    " breeds",
    " in",
    " a",
    " sentence",
    ".\n\n",
    "---\n\n",
    "####",
    " üêæ",
    " *",
    "Our",
    " Goal",
    "*\n\n",
    "Let",
    "‚Äôs",
    " say",
    " you",
    " have",
    " a",
    " list",
    " of",
    " cat",
    " breeds",
    ",",
    " and",
    " you",
    " want",
    " to",
    " check",
    " if",
    " a",
    " given",
    " sentence",
    " or",
    " paragraph",
    " mentions",
    " any",
    " of",
    " them",
    ".\n\n",
    "Example",
    " cat",
    " breeds",
    " we'll",
    " use",
    ":\n",
    "-",
    " Siam",
    "ese",
    "\n",
    "-",
    " Persian",
    "\n",
    "-",
    " Maine",
    " C",
    "oon",
    "\n",
    "-",
    " Bengal",
    "\n",
    "-",
    " S",
    "ph",
    "yn",
    "x",
    "\n\n",
    "---\n\n",
    "####",
    " üß™",
    " *",
    "Step",
    "-by",
    "-Step",
    " Example",
    " in",
    " Python",
    "*\n\n",
    "Let",
    "‚Äôs",
    " write",
    " a",
    " Python",
    " script",
    " that",
    " uses",
    " regex",
    " to",
    " identify",
    " these",
    " breeds",
    " in",
    " a",
    " sentence",
    ".\n\n",
    "```",
    "python",
    "\n",
    "import",
    " re",
    "\n\n",
    "#",
    " List",
    " of",
    " cat",
    " breeds",
    "\n",
    "cat",
    "_b",
    "re",
    "eds",
    " =",
    " ['",
    "S",
    "iam",
    "ese",
    "',",
    " '",
    "Pers",
    "ian",
    "',",
    " '",
    "M",
    "aine",
    " C",
    "oon",
    "',",
    " '",
    "B",
    "eng",
    "al",
    "',",
    " '",
    "S",
    "ph",
    "yn",
    "x",
    "']\n\n",
    "#",
    " Join",
    " breeds",
    " into",
    " a",
    " regex",
    " pattern",
    "\n",
    "pattern",
    " =",
    " r",
    "'\\",
    "b",
    "(?:",
    "'",
    " +",
    " '|",
    "'.",
    "join",
    "(map",
    "(re",
    ".escape",
    ",",
    " cat",
    "_b",
    "re",
    "eds",
    "))",
    " +",
    " r",
    "')",
    "\\",
    "b",
    "'\n\n",
    "#",
    " Sample",
    " sentences",
    "\n",
    "text",
    " =",
    " \"",
    "I",
    " have",
    " a",
    " Bengal",
    " and",
    " a",
    " Maine",
    " C",
    "oon",
    ",",
    " but",
    " my",
    " friend",
    " prefers",
    " S",
    "ph",
    "yn",
    "x",
    " cats",
    ".\"\n\n",
    "#",
    " Search",
    " for",
    " matches",
    "\n",
    "matches",
    " =",
    " re",
    ".findall",
    "(pattern",
    ",",
    " text",
    ",",
    " flags",
    "=re",
    ".",
    "IGNORE",
    "CASE",
    ")\n\n",
    "print",
    "(\"",
    "Cat",
    " breeds",
    " found",
    ":\",",
    " matches",
    ")\n",
    "``",
    "`\n\n",
    "---\n\n",
    "####",
    " üîç",
    " *",
    "Explanation",
    "*\n\n",
    "-",
    " `",
    "re",
    ".escape",
    "()`",
    " is",
    " used",
    " to",
    " safely",
    " handle",
    " multi",
    "-word",
    " breeds",
    " like",
    " *",
    "M",
    "aine",
    " C",
    "oon",
    "*",
    ".\n",
    "-",
    " `",
    "(?:",
    "...)",
    "`",
    " is",
    " a",
    " non",
    "-c",
    "apt",
    "uring",
    " group",
    " for",
    " pattern",
    " altern",
    "ation",
    ".\n",
    "-",
    " `",
    "\\",
    "b",
    "`",
    " ensures",
    " we",
    " match",
    " whole",
    " words",
    " only",
    " (",
    "so",
    " \"",
    "Pers",
    "ian",
    "\"",
    " doesn't",
    " match",
    " \"",
    "Pers",
    "ians",
    "\").\n",
    "-",
    " `",
    "re",
    ".",
    "IGNORE",
    "CASE",
    "`",
    " allows",
    " us",
    " to",
    " match",
    " regardless",
    " of",
    " capitalization",
    ".\n",
    "-",
    " `",
    "re",
    ".findall",
    "()`",
    " returns",
    " all",
    " matches",
    " in",
    " the",
    " given",
    " text",
    ".\n\n",
    "---\n\n",
    "####",
    " üß™",
    " *",
    "Testing",
    " the",
    " Code",
    "*\n\n",
    "If",
    " you",
    " run",
    " this",
    " code",
    " with",
    " the",
    " sample",
    " text",
    ",",
    " it",
    " will",
    " output",
    ":\n\n",
    "```",
    "bash",
    "\n",
    "Cat",
    " breeds",
    " found",
    ":",
    " ['",
    "B",
    "eng",
    "al",
    "',",
    " '",
    "M",
    "aine",
    " C",
    "oon",
    "',",
    " '",
    "S",
    "ph",
    "yn",
    "x",
    "']\n",
    "``",
    "`\n\n",
    "---\n\n",
    "####",
    " üîß",
    " *",
    "Custom",
    "izing",
    " for",
    " Your",
    " Use",
    " Case",
    "*\n\n",
    "If",
    " you",
    " want",
    " to",
    " evaluate",
    " whether",
    " *",
    "any",
    "*",
    " breed",
    " is",
    " mentioned",
    ":\n\n",
    "```",
    "python",
    "\n",
    "if",
    " matches",
    ":\n",
    "   ",
    " print",
    "(\"",
    "At",
    " least",
    " one",
    " breed",
    " is",
    " mentioned",
    ".\")\n",
    "else",
    ":\n",
    "   ",
    " print",
    "(\"",
    "No",
    " known",
    " cat",
    " breeds",
    " found",
    ".\")\n",
    "``",
    "`\n\n",
    "Or",
    " to",
    " evaluate",
    " how",
    " often",
    " each",
    " breed",
    " is",
    " mentioned",
    ":\n\n",
    "```",
    "python",
    "\n",
    "from",
    " collections",
    " import",
    " Counter",
    "\n\n",
    "counts",
    " =",
    " Counter",
    "(map",
    "(str",
    ".lower",
    ",",
    " matches",
    "))\n",
    "print",
    "(\"",
    "Breed",
    " frequency",
    ":\",",
    " counts",
    ")\n",
    "``",
    "`\n\n",
    "---\n\n",
    "Would",
    " you",
    " like",
    " to",
    " try",
    " this",
    " in",
    " another",
    " language",
    " (",
    "Java",
    "Script",
    ",",
    " for",
    " example",
    "),",
    " or",
    " go",
    " deeper",
    " into",
    " pattern",
    "-building",
    " with",
    " regex",
    " (",
    "like",
    " partial",
    " matches",
    ",",
    " fuzzy",
    " matching",
    ",",
    " etc",
    ".)",
    "?"
]